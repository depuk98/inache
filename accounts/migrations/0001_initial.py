# Generated by Django 3.2.7 on 2023-02-07 07:58

import accounts.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=255, null=True)),
                ('email', models.CharField(max_length=255, null=True, unique=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15)),
                ('password', models.CharField(max_length=100)),
                ('user_name', models.CharField(max_length=255, null=True, unique=True)),
                ('role', models.CharField(max_length=20, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'Others')], null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('profile_picture', models.FileField(blank=True, default='uploads/users/default.png', null=True, upload_to=accounts.models.user_directory_path)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('deleted_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BrodcastMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegionalLanguage', models.CharField(max_length=50)),
                ('Englishmessage', models.CharField(max_length=2000)),
                ('Regionalmessage', models.CharField(max_length=2000)),
                ('Tag', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CaseNumber', models.CharField(blank=True, max_length=50)),
                ('CallRecording_url', models.CharField(default='', max_length=5000)),
                ('ReportingMedium', models.CharField(choices=[('Call', 'Call'), ('In Person', 'In Person'), ('Suggestion Box', 'Suggestion Box'), ('Worker Committee', 'Worker Committee')], default='Call', max_length=64)),
                ('Date', models.DateTimeField(blank=True, default=django.utils.timezone.localtime)),
                ('Time', models.CharField(blank=True, default=django.utils.timezone.localtime, max_length=500)),
                ('CaseCategory', models.CharField(blank=True, max_length=50)),
                ('SubCategory', models.CharField(blank=True, max_length=50)),
                ('CaseValidation', models.BooleanField(default=True)),
                ('CaseNature', models.CharField(choices=[('Complain', 'Complain'), ('Query', 'Query'), ('Suggestion', 'Suggestion')], default='Complain', max_length=64)),
                ('Priority', models.CharField(blank=True, max_length=200)),
                ('CaseStatus', models.CharField(choices=[('Assigned to Reporter', 'Assigned To Reporter'), ('Assigned to Manager', 'Assigned To Manager'), ('Assigned to Troubleshooter', 'Assigned To Troubleshooter'), ('Under Investigation', 'Under Investigation'), ('Resolved', 'Resolved'), ('Closed', 'Closed'), ('Assigned to Quality Checker', 'Assigned To Quality Checker'), ('Completed', 'Completed')], default='Assigned to Reporter', max_length=64)),
                ('CaseDescription', models.CharField(blank=True, max_length=500)),
                ('Counter', models.IntegerField(blank=True, default=1)),
                ('CommentsByRep', models.CharField(blank=True, max_length=5000)),
                ('CommentsByMan', models.CharField(blank=True, max_length=5000)),
                ('Tag', models.CharField(blank=True, max_length=200)),
                ('T0', models.IntegerField(blank=True, default=0)),
                ('T1', models.IntegerField(blank=True, default=0)),
                ('T2', models.IntegerField(blank=True, default=0)),
                ('T3', models.IntegerField(blank=True, default=0)),
                ('T1vrfDate', models.DateTimeField(blank=True, null=True)),
                ('T2vrfDate', models.DateTimeField(blank=True, null=True)),
                ('T3vrfDate', models.DateTimeField(blank=True, null=True)),
                ('T0Breached', models.BooleanField(blank=True, null=True)),
                ('T1Breached', models.BooleanField(blank=True, null=True)),
                ('T2Breached', models.BooleanField(blank=True, null=True)),
                ('T3Breached', models.BooleanField(blank=True, null=True)),
                ('Breached', models.BooleanField(blank=True, null=True)),
                ('t3a1', models.BooleanField(blank=True, null=True)),
                ('t3a2', models.BooleanField(blank=True, null=True)),
                ('t3b1', models.BooleanField(blank=True, null=True)),
                ('t3b2', models.BooleanField(blank=True, null=True)),
                ('t3c1', models.BooleanField(blank=True, null=True)),
                ('t3c2', models.BooleanField(blank=True, null=True)),
                ('reopened', models.BooleanField(default=False)),
                ('ResolveTime', models.DateTimeField(blank=True, null=True)),
                ('ClosingTime', models.DateTimeField(blank=True, null=True)),
                ('CaseDetails', models.CharField(blank=True, max_length=5000)),
                ('MessagebyWorker', models.CharField(blank=True, max_length=5000)),
                ('CaseFileupload', models.FileField(blank=True, upload_to=accounts.models.case_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='CaseLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Message', models.CharField(blank=True, default='', max_length=5000)),
                ('Rec_URL', models.CharField(blank=True, default='', max_length=5000)),
                ('DatTime', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('Content', models.CharField(blank=True, max_length=5000)),
                ('Tag', models.CharField(blank=True, max_length=10)),
                ('CaseStatus', models.CharField(blank=True, default='', max_length=5000)),
                ('cr_datetime', models.DateTimeField(blank=True, null=True)),
                ('cm_datetime', models.DateTimeField(blank=True, null=True)),
                ('ct_datetime', models.DateTimeField(blank=True, null=True)),
                ('ctres_datetime', models.DateTimeField(blank=True, null=True)),
                ('cls_datetime', models.DateTimeField(blank=True, null=True)),
                ('rs_msg', models.CharField(blank=True, default='', max_length=5000)),
                ('priority', models.CharField(blank=True, default='', max_length=5000)),
                ('Category', models.CharField(blank=True, default='', max_length=5000)),
                ('SubCat', models.CharField(blank=True, default='', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='CaseSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PriorityClassification', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), default=list, size=None)),
                ('CaseStaus', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), default=list, size=None)),
                ('MediumOfSubmission', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), default=list, size=None)),
                ('CaseNature', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), default=list, size=None)),
                ('CaseCategories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), default=list, size=None)),
                ('CaseSubCategories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Legalcompanyname', models.CharField(max_length=50)),
                ('Address', models.CharField(max_length=50)),
                ('POC', models.CharField(max_length=50)),
                ('Email', models.EmailField(max_length=254)),
                ('PhoneNo', models.IntegerField()),
                ('Code', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Complainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PhoneNo', models.CharField(default='', max_length=15)),
                ('Department', models.CharField(blank=True, default='', max_length=500)),
                ('SubDepartment', models.CharField(blank=True, default='', max_length=500)),
                ('Registered', models.BooleanField(default=False)),
                ('Batch', models.CharField(blank=True, default='', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(default='', max_length=10)),
                ('Location', models.CharField(max_length=30)),
                ('Region', models.CharField(choices=[('North', 'North'), ('South', 'South')], default='South', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='FactoryNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='ReopenCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TOC', models.CharField(blank=True, max_length=5000)),
                ('IC', models.CharField(blank=True, max_length=5000)),
                ('QOE', models.CharField(blank=True, max_length=5000)),
                ('Remarks', models.CharField(blank=True, max_length=50000)),
            ],
        ),
        migrations.CreateModel(
            name='SMSTemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('templateID', models.CharField(max_length=500)),
                ('body', models.CharField(max_length=5000)),
                ('Title', models.CharField(blank=True, max_length=5000)),
                ('language', models.CharField(choices=[('English', 'English'), ('Hindi', 'Hindi'), ('Kannada', 'Kannada'), ('Punjabi', 'Punjabi')], default='English', max_length=100)),
                ('variables', models.JSONField(default=None, null=True)),
                ('template_categories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=1000), default=list, size=None)),
                ('user_roles_access', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=1000), default=['CR', 'CM', 'CT'], size=None)),
            ],
        ),
        migrations.CreateModel(
            name='SoftDeleteModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TatawebhooksLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receivedAt', models.DateTimeField(help_text='when webhook accesses our url')),
                ('payload', models.JSONField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CaseManager',
            fields=[
                ('baseusermodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.baseusermodel')),
                ('factoryemployeeid', models.IntegerField(null=True)),
                ('QCFactory', models.CharField(default='', max_length=50)),
                ('QCMonth', models.CharField(default='', max_length=50)),
                ('QCYear', models.CharField(default='', max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.baseusermodel',),
        ),
        migrations.CreateModel(
            name='CaseReporter',
            fields=[
                ('baseusermodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.baseusermodel')),
                ('factoryemployeeid', models.IntegerField(null=True)),
                ('QCFactory', models.CharField(default='', max_length=50)),
                ('QCMonth', models.CharField(default='', max_length=50)),
                ('QCYear', models.CharField(default='', max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.baseusermodel',),
        ),
        migrations.CreateModel(
            name='CaseReslovingReport',
            fields=[
                ('Case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.case')),
                ('CCRremarks', models.CharField(blank=True, max_length=500)),
                ('CCRWhen', models.CharField(max_length=5000)),
                ('CCRWho', models.CharField(blank=True, max_length=500)),
                ('CCRWhere', models.CharField(max_length=5000)),
                ('CCRWhathappened', models.CharField(max_length=5000)),
                ('CCTemplate', models.CharField(blank=True, max_length=5000)),
                ('CCLanguage', models.CharField(blank=True, max_length=20)),
                ('CCMessage', models.CharField(blank=True, max_length=5000)),
                ('TimeToResolveCase', models.TimeField(blank=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CaseTroubleShooter',
            fields=[
                ('baseusermodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.baseusermodel')),
                ('factoryemployeeid', models.IntegerField(null=True)),
                ('QCFactory', models.CharField(default='', max_length=50)),
                ('QCMonth', models.CharField(default='', max_length=50)),
                ('QCYear', models.CharField(default='', max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.baseusermodel',),
        ),
        migrations.CreateModel(
            name='FactoryAdmin',
            fields=[
                ('baseusermodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.baseusermodel')),
                ('factoryemployeeid', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.baseusermodel',),
        ),
        migrations.AddIndex(
            model_name='tatawebhookslog',
            index=models.Index(fields=['receivedAt'], name='accounts_ta_receive_ea0e6a_idx'),
        ),
        migrations.AddField(
            model_name='smstemplates',
            name='Company',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='reopencase',
            name='Case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.case'),
        ),
        migrations.AddField(
            model_name='factorynumber',
            name='Company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='factorynumber',
            name='Factory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.factory'),
        ),
        migrations.AddField(
            model_name='factory',
            name='Company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='complainer',
            name='Company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='complainer',
            name='Factory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.factory'),
        ),
        migrations.AddField(
            model_name='casesettings',
            name='Company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='caselogs',
            name='Case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.case'),
        ),
        migrations.AddField(
            model_name='case',
            name='Company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='case',
            name='Complainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.complainer'),
        ),
        migrations.AddField(
            model_name='case',
            name='Factory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.factory'),
        ),
        migrations.AddField(
            model_name='brodcastmessage',
            name='Factory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.factory'),
        ),
        migrations.AddField(
            model_name='baseusermodel',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='baseusermodel',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='factoryadmin',
            name='Company',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='factoryadmin',
            name='Factory',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='accounts.factory'),
        ),
        migrations.AddField(
            model_name='casetroubleshooter',
            name='Company',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='casetroubleshooter',
            name='Factory',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='accounts.factory'),
        ),
        migrations.AddField(
            model_name='casereporter',
            name='Company',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='casereporter',
            name='Factory',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='accounts.factory'),
        ),
        migrations.AddField(
            model_name='casemanager',
            name='Company',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='accounts.company'),
        ),
        migrations.AddField(
            model_name='casemanager',
            name='Factory',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='accounts.factory'),
        ),
        migrations.AddField(
            model_name='case',
            name='CaseManager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cases_m', to='accounts.casemanager'),
        ),
        migrations.AddField(
            model_name='case',
            name='CaseReporter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cases_r', to='accounts.casereporter'),
        ),
        migrations.AddField(
            model_name='case',
            name='CaseTroubleShooter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cases_t', to='accounts.casetroubleshooter'),
        ),
    ]
